import { logger } from "../utils/logger.js";
/**
 * Types text into an input field (replaces existing text).
 */
export async function type(page, selector, text) {
    try {
        await page.fill(selector, text);
        logger.info(`Typed text "${text}" into ${selector}`);
    }
    catch (err) {
        logger.error(`Failed to type into ${selector}: ${err.message}`);
        throw err;
    }
}
/**
 * Clears the input field and types new text.
 */
export async function clearAndType(page, selector, text) {
    try {
        await page.fill(selector, '');
        await page.fill(selector, text);
        logger.info(`Cleared and typed text "${text}" into ${selector}`);
    }
    catch (err) {
        logger.error(`Failed to clear and type into ${selector}: ${err.message}`);
        throw err;
    }
}
/**
 * Types text into an input field with a specified delay between keystrokes.
 */
export async function typeWithDelay(page, selector, text, delay = 100) {
    try {
        await page.type(selector, text, { delay });
        logger.info(`Typed text "${text}" into ${selector} with delay ${delay}ms`);
    }
    catch (err) {
        logger.error(`Failed to type with delay into ${selector}: ${err.message}`);
        throw err;
    }
}
/**
 * Presses a keyboard key on the specified element.
 */
export async function pressKey(page, selector, key) {
    try {
        await page.press(selector, key);
        logger.info(`Pressed key "${key}" on ${selector}`);
    }
    catch (err) {
        logger.error(`Failed to press key "${key}" on ${selector}: ${err.message}`);
        throw err;
    }
}
