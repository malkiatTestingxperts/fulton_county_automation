import { logger } from "../utils/logger.js";
export async function click(page, selector) {
    try {
        logger.info(`Clicking on ${selector}`);
        await page.click(selector);
        logger.info(`Clicked successfully on ${selector}`);
    }
    catch (err) {
        logger.error(`Failed to click on ${selector}: ${err.message}`);
        throw err;
    }
}
export async function clickWithIndex(page, selector, index = 0) {
    try {
        logger.info(`Clicking on ${selector}`);
        await page.locator(selector).nth(index).click();
        logger.info(`Clicked successfully on ${selector}`);
    }
    catch (err) {
        logger.error(`Failed to click on ${selector}: ${err.message}`);
        throw err;
    }
}
export async function rightClick(page, selector) {
    try {
        logger.info(`Right Clicking on ${selector}`);
        await page.click(selector, { button: 'right' });
        logger.info(`Right Clicked successfully on ${selector}`);
    }
    catch (err) {
        logger.error(`Failed to right click on ${selector}: ${err.message}`);
        throw err;
    }
}
export async function doubleClick(page, selector) {
    try {
        logger.info(`Double Clicking on ${selector}`);
        await page.dblclick(selector);
        logger.info(`Double Clicked successfully on ${selector}`);
    }
    catch (err) {
        logger.error(`Failed to double click on ${selector}: ${err.message}`);
        throw err;
    }
}
export async function clickWithRetry(page, selector, retries = 5, delayMs = 1000) {
    for (let attempt = 1; attempt <= retries; attempt++) {
        try {
            logger.info(`Attempt ${attempt}/${retries}: Clicking on ${selector}`);
            await page.click(selector);
            logger.info(`Successfully clicked on ${selector}`);
            return;
        }
        catch (error) {
            const errMsg = error.message;
            if (attempt < retries) {
                logger.warn(`Attempt ${attempt} failed on ${selector}: ${errMsg}.`);
                await new Promise(res => setTimeout(res, delayMs));
            }
            else {
                logger.error(`All ${retries} attempts failed clicking ${selector}: ${errMsg}`);
                throw error;
            }
        }
    }
}
